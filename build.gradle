plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id 'jacoco'
    id 'application'
    id 'com.adarshr.test-logger' version '3.1.0'
}

version "1.3.0-SNAPSHOT"
group "org.cugos.geometry.ws"

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    developmentOnly
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.openapi:micronaut-openapi"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.swagger.core.v3:swagger-annotations"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "org.locationtech.jts:jts-core:1.18.2"
    implementation "org.locationtech.jts.io:jts-io-common:1.17.1"
    implementation "org.locationtech.proj4j:proj4j:1.1.4"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

jacoco {
    toolVersion = "0.8.3"
}

mainClassName = "org.cugos.geometry.ws.Application"

tasks.withType(JavaCompile) {
    options.fork = true
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
