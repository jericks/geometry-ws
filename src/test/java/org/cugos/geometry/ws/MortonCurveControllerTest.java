package org.cugos.geometry.ws;

import io.micronaut.http.HttpRequest;
import io.micronaut.http.MediaType;
import org.junit.jupiter.api.Test;

import java.net.URLEncoder;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class MortonCurveControllerTest extends AbstractControllerTest  {

    private final String inputGeometry = "POLYGON ((0 0, 0 10, 10 10, 10 0, 0 0))";

    private final String resultGeometry = "LINESTRING (0 0, 1.4285714285714286 0, 0 1.4285714285714286, " +
            "1.4285714285714286 1.4285714285714286, 2.857142857142857 0, 4.285714285714286 0, " +
            "2.857142857142857 1.4285714285714286, 4.285714285714286 1.4285714285714286, 0 2.857142857142857, " +
            "1.4285714285714286 2.857142857142857, 0 4.285714285714286, 1.4285714285714286 4.285714285714286, " +
            "2.857142857142857 2.857142857142857, 4.285714285714286 2.857142857142857, " +
            "2.857142857142857 4.285714285714286, 4.285714285714286 4.285714285714286, 5.714285714285714 0, " +
            "7.142857142857143 0, 5.714285714285714 1.4285714285714286, 7.142857142857143 1.4285714285714286, " +
            "8.571428571428571 0, 10 0, 8.571428571428571 1.4285714285714286, 10 1.4285714285714286, " +
            "5.714285714285714 2.857142857142857, 7.142857142857143 2.857142857142857, " +
            "5.714285714285714 4.285714285714286, 7.142857142857143 4.285714285714286, " +
            "8.571428571428571 2.857142857142857, 10 2.857142857142857, 8.571428571428571 4.285714285714286, " +
            "10 4.285714285714286, 0 5.714285714285714, 1.4285714285714286 5.714285714285714, " +
            "0 7.142857142857143, 1.4285714285714286 7.142857142857143, 2.857142857142857 5.714285714285714, " +
            "4.285714285714286 5.714285714285714, 2.857142857142857 7.142857142857143, " +
            "4.285714285714286 7.142857142857143, 0 8.571428571428571, 1.4285714285714286 8.571428571428571, 0 10, " +
            "1.4285714285714286 10, 2.857142857142857 8.571428571428571, 4.285714285714286 8.571428571428571, " +
            "2.857142857142857 10, 4.285714285714286 10, 5.714285714285714 5.714285714285714, " +
            "7.142857142857143 5.714285714285714, 5.714285714285714 7.142857142857143, " +
            "7.142857142857143 7.142857142857143, 8.571428571428571 5.714285714285714, 10 5.714285714285714, " +
            "8.571428571428571 7.142857142857143, 10 7.142857142857143, 5.714285714285714 8.571428571428571, " +
            "7.142857142857143 8.571428571428571, 5.714285714285714 10, 7.142857142857143 10, " +
            "8.571428571428571 8.571428571428571, 10 8.571428571428571, 8.571428571428571 10, 10 10)";

    @Test
    public void get() throws Exception {
        HttpRequest request = HttpRequest.GET("/mortonCurve/wkt/wkt?number=30&geom=" + URLEncoder.encode(inputGeometry, "UTF-8"));
        String geometry = client.toBlocking().retrieve(request);
        assertEquals(resultGeometry, geometry);
    }

    @Test
    public void post() throws Exception {
        HttpRequest request = HttpRequest.POST("/mortonCurve/wkt/wkt?number=30", inputGeometry).contentType(MediaType.TEXT_PLAIN_TYPE);
        String geometry = client.toBlocking().retrieve(request);
        assertEquals(resultGeometry, geometry);
    }

}
